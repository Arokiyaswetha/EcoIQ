image_path = "/kaggle/input/recyclable-and-household-waste-classification/images/images/aerosol_cans/default/Image_1.png"
image = Image.open(image_path)

# Define the new size (width, height)
new_size = (256, 256)  # Example: Resize to 256x256 pixels

# Resize the image
resized_image = image.resize(new_size)


# Save or display the resized image
resized_image.save("resized_image.png")  # Save the resized image
resized_image.show()  # Display the resized imag



from tensorflow.keras.preprocessing.image import load_img, img_to_array
from tensorflow.keras.applications.resnet50 import preprocess_input
import numpy as np

# Path to the image
image_path = "/kaggle/input/recyclable-and-household-waste-classification/images/images/aerosol_cans/default/Image_1.png"

# Load and resize the image
img = load_img(image_path, target_size=(256, 256))

# Convert the image to a numpy array
img_array = img_to_array(img)

# Add a batch dimension (since the model expects a batch of images)
img_array = np.expand_dims(img_array, axis=0)

# Preprocess the image (normalize pixel values for ResNet50)
img_array = preprocess_input(img_array)

# Make the prediction
predictions = model.predict(img_array)

# Interpret the prediction
predicted_class = np.argmax(predictions, axis=1)  # Get the index of the highest probability
predicted_probability = np.max(predictions, axis=1)  # Get the highest probability

print(f"Predicted class: {predicted_class}, Probability: {predicted_probability}")
